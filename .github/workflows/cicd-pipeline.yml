name: CI/CD Deployment Pipeline

on:
  workflow_dispatch: # 允許手動觸發

jobs:
  ##################################################
  # 1. BUILD JOB: 建置與打包專案                   #
  ##################################################
  build:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.version.outputs.new_version }}
    steps:
      - name: 1. Checkout Repository
        uses: actions/checkout@v4

      - name: 2. Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 3. Install Dependencies
        run: npm install

      - name: 4. Run Build Script
        run: npm run build

      - name: 5. Archive Production Artifact into a Zip
        run: |
          mkdir -p release_package
          cp -r dist release_package/
          cp action.yml release_package/
          cp package.json release_package/
          cp README.md release_package/
          cd release_package
          zip -r ../release.zip .

      - name: 6. Upload Zipped Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: release.zip

  ##################################################
  # 2. DEPLOY TO STAGING JOB: 部署到 Staging 環境   #
  ##################################################
  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: 1. Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: 2. Create Staging Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ vars.BUILD_TAG }}
          NOTE: ${{ vars.RELEASE_NOTE }}
        run: |
          gh release create "$TAG" release.zip --title "Staging Release: $TAG" --notes "$NOTE" --repo ${{ github.repository }}

  ##################################################
  # 3. DEPLOY TO PRODUCTION JOB: 部署到 Production 環境 #
  ##################################################
  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: 1. Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: 2. Create Production Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ vars.BUILD_TAG }}
          NOTE: ${{ vars.RELEASE_NOTE }}
        run: |
          gh release create "$TAG" release.zip --title "Production Release: $TAG" --notes "$NOTE" --repo ${{ github.repository }}
